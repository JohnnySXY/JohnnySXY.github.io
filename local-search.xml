<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于如何在hexo博客上发布和删除博文</title>
    <link href="/2023/04/20/Hexo-Release-OR-Delete-Article/"/>
    <url>/2023/04/20/Hexo-Release-OR-Delete-Article/</url>
    
    <content type="html"><![CDATA[<p>关于如何在hexo博客上发布和删除博文</p><p>创建文章<br>进入博客目录，在 &#x2F;source&#x2F;_posts 文件夹下直接建立一个.md文件</p><p>hexo new “这里填入文章的标题”</p><p>.md文件注意使用带有makedown语法的编辑器打开，对文章进行编辑，你可以在Hexo-&gt;Source-&gt;_post目录下看到你新创建的那个文章，还有一个配套的文件夹，里面放这边博文的图片资源</p><p>文章标题，日期，标签，分类</p><p>title: 文章标题<br>date: 2015-11-13 15:40:25<br>tags: 标签<br>categories: 分类<br>文章插入图片需要用到一个Hexo的插件，首先cd到hexo的根目录下</p><p>npm install <a href="https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save</p><p>然后把图片放入对应文章的配套文件夹下</p><p>如果要进行代码书写，代码样式可自行下载</p><p>发布新建文章<br>文章写好后，直接在git bash中执行以下命令即可直接发布文章</p><p>hexo d -g</p><p>如果发布的时候出现错误</p><p>ERROR Deployer not found: git</p><p>执行</p><p>npm install hexo-deployer-git –save</p><p>删除文章<br>删除文章的过程一样也很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。</p><p>首先进入到source &#x2F; _post 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行</p><p>hexo d -g</p><p>再去主页查看你就会发现你的博客上面已经空空如也了，这就是如何删除文章的方法。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>命令</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos_CPU_Check_Info</title>
    <link href="/2023/04/20/Centos-CPU-Check-Info/"/>
    <url>/2023/04/20/Centos-CPU-Check-Info/</url>
    
    <content type="html"><![CDATA[<h1 id="总核数-x3D-物理CPU个数-X-每颗物理CPU的核数"><a href="#总核数-x3D-物理CPU个数-X-每颗物理CPU的核数" class="headerlink" title="总核数 &#x3D; 物理CPU个数 X 每颗物理CPU的核数"></a>总核数 &#x3D; 物理CPU个数 X 每颗物理CPU的核数</h1><h1 id="总逻辑CPU数-x3D-物理CPU个数-X-每颗物理CPU的核数-X-超线程数"><a href="#总逻辑CPU数-x3D-物理CPU个数-X-每颗物理CPU的核数-X-超线程数" class="headerlink" title="总逻辑CPU数 &#x3D; 物理CPU个数 X 每颗物理CPU的核数 X 超线程数"></a>总逻辑CPU数 &#x3D; 物理CPU个数 X 每颗物理CPU的核数 X 超线程数</h1><h1 id="查看物理CPU个数"><a href="#查看物理CPU个数" class="headerlink" title="查看物理CPU个数"></a>查看物理CPU个数</h1><p>cat &#x2F;proc&#x2F;cpuinfo| grep “physical id”| sort| uniq| wc -l</p><h1 id="查看每个物理CPU中core的个数-即核数"><a href="#查看每个物理CPU中core的个数-即核数" class="headerlink" title="查看每个物理CPU中core的个数(即核数)"></a>查看每个物理CPU中core的个数(即核数)</h1><p>cat &#x2F;proc&#x2F;cpuinfo| grep “cpu cores”| uniq</p><h1 id="查看逻辑CPU的个数"><a href="#查看逻辑CPU的个数" class="headerlink" title="查看逻辑CPU的个数"></a>查看逻辑CPU的个数</h1><p>cat &#x2F;proc&#x2F;cpuinfo| grep “processor”| wc -l</p>]]></content>
    
    
    <categories>
      
      <category>SYSTEM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CENTOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
